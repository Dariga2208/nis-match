import random
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from utils.profile import show_profile
from database import user_data
from keyboards.buttons import reaction_keyboard

router = Router()

# –•—Ä–∞–Ω–∏–º, –∫–∞–∫—É—é –∞–Ω–∫–µ—Ç—É —Å–µ–π—á–∞—Å —Å–º–æ—Ç—Ä–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
viewing_index = {}

@router.message(F.text == "üëÄ –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")
async def start_viewing(message: Message, state: FSMContext):
    viewer_id = message.from_user.id
    profiles = [uid for uid in user_data if uid != viewer_id]

    if not profiles:
        await message.answer("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–Ω–∫–µ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.")
        return

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∞–Ω–∫–µ—Ç—ã —Å–Ω–∞—á–∞–ª–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–∑–¥–∞–Ω–∏—è, –∑–∞—Ç–µ–º –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∏—Ö —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
    sorted_profiles = sorted(
        [user_data[uid] for uid in profiles],
        key=lambda x: x['created_at'],
        reverse=True
    )
    
    # –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∞–Ω–∫–µ—Ç—ã –ø–æ—Å–ª–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    random.shuffle(sorted_profiles)

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –∏–Ω–¥–µ–∫—Å–æ–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    viewing_index[viewer_id] = 0
    if sorted_profiles:
        first_profile = sorted_profiles[0]
        await show_profile(message, first_profile)
        await message.answer("–ü–æ—Å—Ç–∞–≤—å—Ç–µ —Ä–µ–∞–∫—Ü–∏—é:", reply_markup=reaction_keyboard)

@router.callback_query(F.data.in_(["like", "dislike"]))
async def handle_reaction(callback: CallbackQuery):
    viewer_id = callback.from_user.id
    profiles = [uid for uid in user_data if uid != viewer_id]

    index = viewing_index.get(viewer_id, 0)

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∞–Ω–∫–µ—Ç—ã —Å–Ω–∞—á–∞–ª–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–∑–¥–∞–Ω–∏—è, –∑–∞—Ç–µ–º –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∏—Ö —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
    sorted_profiles = sorted(
        [user_data[uid] for uid in profiles],
        key=lambda x: x['created_at'],
        reverse=True
    )
    
    # –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∞–Ω–∫–µ—Ç—ã –ø–æ—Å–ª–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    random.shuffle(sorted_profiles)

    if index >= len(sorted_profiles):
        await callback.message.edit_text("–í—ã –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã.")
        return

    liked_id = sorted_profiles[index]
    viewing_index[viewer_id] = index + 1

    if callback.data == "like":
        liker_profile = user_data[viewer_id]
        await callback.bot.send_photo(
            chat_id=liked_id,
            photo=liker_profile["photo"],
            caption=f"–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –∫–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å!\n\n"
                    f"{liker_profile['name']}, {liker_profile['age']}, {liker_profile['grade']} –∫–ª–∞—Å—Å\n"
                    f"{liker_profile.get('about', '')}\n\n"
                    f"@{callback.from_user.username if callback.from_user.username else '–°—Å—ã–ª–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞'}"
        )

    # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –∞–Ω–∫–µ—Ç—É
    if viewing_index[viewer_id] < len(sorted_profiles):
        next_profile = sorted_profiles[viewing_index[viewer_id]]
        await callback.message.delete()
        await show_profile(callback.message, next_profile)
        await callback.message.answer("–ü–æ—Å—Ç–∞–≤—å—Ç–µ —Ä–µ–∞–∫—Ü–∏—é:", reply_markup=reaction_keyboard)
    else:
        await callback.message.edit_text("–í—ã –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã.")
